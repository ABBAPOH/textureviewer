#ifndef EXPECTED_H
#define EXPECTED_H

#include <qglobal.h>

#include <private/expected.h>

template<class Value, class Error>
using Expected = Private::expected<Value, Error>;

template <class E>
inline Private::unexpected<typename std::decay<E>::type> makeUnexpected(E &&e) {
  return Private::make_unexpected(std::forward<E>(e));
}

#endif // EXPECTED_H
